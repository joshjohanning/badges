name: Update blog badges

on:
  workflow_dispatch:
  schedule:
    # Run once daily at midnight UTC
    - cron: '0 0 * * *'

concurrency:
  group: badges-repo-updates
  cancel-in-progress: false

jobs:
  update-blog-badges:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout badges repository
      uses: actions/checkout@v5

    - name: Checkout blog repository
      uses: actions/checkout@v5
      with:
        repository: joshjohanning/joshjohanning.github.io
        path: blog-repo

    - name: Count blog posts
      id: posts-count
      run: |
        # Count markdown files in _posts directory
        posts_count=$(find blog-repo/_posts -name "*.md" -type f | wc -l)
        echo "Blog posts count: $posts_count"
        echo "count=$posts_count" >> $GITHUB_OUTPUT

    - name: Get most recent post date
      id: recent-post
      run: |
        # Get the most recent post by filename (assuming YYYY-MM-DD format)
        recent_file=$(find blog-repo/_posts -name "*.md" -type f | sort | tail -1)
        if [ -n "$recent_file" ]; then
          # Extract date from filename (YYYY-MM-DD)
          recent_date=$(basename "$recent_file" | grep -oE '^[0-9]{4}-[0-9]{2}-[0-9]{2}')
          echo "Most recent post date: $recent_date"
          echo "date=$recent_date" >> $GITHUB_OUTPUT
        else
          echo "No posts found"
          echo "date=none" >> $GITHUB_OUTPUT
        fi

    - name: Update badge data
      run: |
        # Use the actual counts from the previous steps
        POSTS_COUNT="${{ steps.posts-count.outputs.count }}"
        RECENT_DATE="${{ steps.recent-post.outputs.date }}"
        echo "Updating blog posts badge with count: $POSTS_COUNT"
        echo "Updating recent post badge with date: $RECENT_DATE"
        
        # Create the JSON file for the blog posts dynamic badge
        mkdir -p blog
        cat > blog/post-count.json << EOF
        {
          "schemaVersion": 1,
          "label": "blog posts",
          "message": "$POSTS_COUNT",
          "labelColor": "gray",
          "color": "blue",
          "namedLogo": "jekyll"
        }
        EOF

        # Create the JSON file for the recent post date badge
        cat > blog/most-recent-post-date.json << EOF
        {
          "schemaVersion": 1,
          "label": "recent post",
          "message": "$RECENT_DATE",
          "labelColor": "gray",
          "color": "blue",
          "namedLogo": "googlecalendar"
        }
        EOF
        
        # Commit and push if changed
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add blog/post-count.json blog/most-recent-post-date.json
        if git diff --staged --quiet; then
          echo "No changes to badge data - blog posts count is still $POSTS_COUNT, recent post date is still $RECENT_DATE"
        else
          echo "Changes to commit and push"
          git commit -m "ci: update blog badges"
          git push
        fi
